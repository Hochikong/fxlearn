/*
 * Copyright 2020 Hochikong
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ktmeta.EditorDemoJava;

import com.formdev.flatlaf.FlatIntelliJLaf;

/**
 * @author ckhoi
 */
public class KtTextEditorDemo extends javax.swing.JFrame {

    /**
     * Creates new form TextEditorDemo
     */
    public KtTextEditorDemo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextArea1CaretUpdate(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextArea1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextArea1CaretUpdate
        KtjTextArea1CaretUpdate(evt);
    }//GEN-LAST:event_jTextArea1CaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatIntelliJLaf.install();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                KtTextEditorDemo x = new KtTextEditorDemo();
                x.setVisible(true);
                x.setLocationRelativeTo(null);
            }
        });
    }

    private KtTextEditorTips tips;

    private final String[] cTips = new String[]{"CREATE TABLE", "CREATE INDEX", "CREATE VIEW"};
    private final String[] pTips = new String[]{"PRIMARY KEY"};
    private final String[] bTips = new String[]{"BIGSERIAL"};
    private final String[] sTips = new String[]{"( );"};
    private final String[] vTips = new String[]{"VARCHAR", "VARCHAR("};
    private final String[] nTips = new String[]{"NOT NULL"};
    private String[] currentTips;
    private String originString;
    private boolean showTips = false;

    protected void KtjTextArea1CaretUpdate(javax.swing.event.CaretEvent evt) {

    }

    private void change(String msg) {
        int caretPostAfterEdit = 0;
        this.tips.setVisible(false);
        System.out.println(msg);
        String origin = this.jTextArea1.getText();
        int caretPost = jTextArea1.getCaretPosition();
        System.out.println(caretPost);

        StringBuilder builder = new StringBuilder();
        String head = origin.substring(0, caretPost - 1);
        String tail = origin.substring(caretPost, origin.length());
        if (head.isEmpty()) {
            jTextArea1.setText(msg);
            caretPostAfterEdit = msg.length();
        } else if (!head.isEmpty() && tail.isEmpty()) {
            builder.append(head);
            builder.append(msg);
            caretPostAfterEdit = builder.length();
            jTextArea1.setText(builder.toString());
        } else if (!head.isEmpty() && !tail.isEmpty()) {
            builder.append(head);
            builder.append(msg);
            caretPostAfterEdit = builder.length();
            builder.append(tail);
            jTextArea1.setText(builder.toString());
        }

        this.tips.jList1.clearSelection();
        this.originString = this.jTextArea1.getText();
        this.showTips = false;
        this.jTextArea1.requestFocus();
        jTextArea1.setCaretPosition(caretPostAfterEdit);
        lastCaretPost = caretPostAfterEdit;
    }

    private int lastCaretPost = 0;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    protected javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
